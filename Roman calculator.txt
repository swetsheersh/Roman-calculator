#include <iostream>
#include <bits/stdc++.h>
#include <vector>
using namespace std;
// Function to covert decimal to roman number.
string convertToRoman(int n) {
        string res="";
        if(n<0) return "Invalid";
        
        unordered_map<int,string>mp;
        mp[1]="I";
        mp[5]="V";
        mp[10]="X";
        mp[50]="L";
        mp[100]="C";
        mp[500]="D";
        mp[1000]="M";
        mp[4]="IV";
        mp[9]="IX";
        mp[40]="XL";
        mp[90]="XC";
        mp[400]="CD";
        mp[900]="CM";
        while(n>=1){
            if(n>=1000){
                res+=mp[1000];
                n-=1000;
            }
            else if(n>=900){
                res+=mp[900];
                n-=900;
            }
            else if(n>=500){
                res+=mp[500];
                n-=500;
            }
            else if(n>=400){
                res+=mp[400];
                n-=400;
            }
            else if(n>=100){
                res+=mp[100];
                n-=100;
            }
            else if(n>=90){
                res+=mp[90];
                n-=90;
            }
            else if(n>=50){
                res+=mp[50];
                n-=50;
            }
            else if(n>=40){
                res+=mp[40];
                n-=40;
            }
            else if(n>=10){
                res+=mp[10];
                n-=10;
            }
            else if(n>=9){
                res+=mp[9];
                n-=9;
            }
            else if(n>=5){
                res+=mp[5];
                n-=5;
            }
            else if(n>=4){
                res+=mp[4];
                n-=4;
            }
            else {
                res+=mp[1];
                n-=1;
            }
            
        }
        return res;
}
// Function to convert roman to decimal.
int romanToDecimal(string str) {
        unordered_map<char,int>mp;
        mp['0'] = 0;
        mp['I'] = 1;
        mp['V'] = 5;
        mp['X'] = 10;
        mp['L'] = 50;
        mp['C'] = 100;
        mp['D'] = 500;
        mp['M'] = 1000;
        str+='0';
        int ans=0;
        for(int i=0;i<str.size();i++){
            if(mp[str[i]]>=mp[str[i+1]]){
                ans += mp[str[i]];
            }
            else{
                ans-=mp[str[i]];
                ans+=mp[str[i+1]];
                i++;
            }
        }
        return ans;
}
// Main function
int main() {
    int n;              // to select the case
    string res="";
    
    float sum1=0;       // For division operation
    vector<string>v;   //input array
    printf("====Roman to Decimal Calculator====\n");
    level:
    v.clear();
    int sum=0; 
    printf("Enter \n 1 for Convert to Decimal number:\n 2 for Add: \n 3 for subtract: \n 4 for Multiply: \n 5 for Divide: \n Press any key for Exit:");
    scanf("%d",&n);
    switch(n) {
        case(1):
            int a;
            printf("Enter no. of elements in input:");
            scanf("%d",&a);
            for(int i=0;i<a;i++){
                printf("Enter v[%d]:",i);
                cin >> res;
                v.push_back(res);
            }
            for(int i=0;i<v.size()-1;i++){
                printf("%d, ",romanToDecimal(v[i]));
            }
            printf("%d",romanToDecimal(v[v.size()-1]));
            cout<<endl;
            v.clear();
            goto level;
            
        case(2):
            sum=0;
            int b;
            printf("Enter no. of elements in input:");
            scanf("%d",&b);
            for(int i=0;i<b;i++){
                printf("Enter v[%d]:",i);
                cin >> res;
                v.push_back(res);
            }
            
            for(int i=0;i<v.size();i++){
                sum+=romanToDecimal(v[i]);
            }
            cout<<sum<<endl;
            cout<<"In Roman: "<<convertToRoman(sum)<<endl;
            v.clear();
            goto level;
        case(3):
            int c;
            printf("Enter no. of elements in input:");
            scanf("%d",&c);
            for(int i=0;i<c;i++){
                printf("Enter v[%d]:",i);
                cin >> res;
                v.push_back(res);
            }
            sum=romanToDecimal(v[0]);
            
            for(int i=1;i<v.size();i++){
                sum-=romanToDecimal(v[i]);
            }
            cout<<sum<<endl;
            cout<<"In Roman: "<<convertToRoman(sum)<<endl;
            goto level;
            
        case(4):
            int d;
            printf("Enter no. of elements in input:");
            scanf("%d",&d);
            for(int i=0;i<d;i++){
                printf("Enter v[%d]:",i);
                cin >> res;
                v.push_back(res);
            }
            sum=1;
            
            for(int i=0;i<v.size();i++){
                sum*=romanToDecimal(v[i]);
            }
            cout<<sum<<endl;
            cout<<"In Roman: "<<convertToRoman(sum)<<endl;
            goto level;
        case(5):
            int e;
            printf("Enter no. of elements in input:");
            scanf("%d",&e);
            for(int i=0;i<e;i++){
                printf("Enter v[%d]:",i);
                cin >> res;
                v.push_back(res);
            }
            sum1=romanToDecimal(v[0]);
            
            for(int i=1;i<v.size();i++){
                sum1/=romanToDecimal(v[i]);
            }
            
            cout<<sum1<<endl;
            if((int)sum1==sum1){
                cout<<"In Roman: "<<convertToRoman((int)sum1)<<endl;
            }
            else{
                cout<<"In Roman: "<<"Invalid"<<endl;
            }
            
            goto level;
            
        default:
            break;
            
    }
    std::cout << "THANK YOU";

    return 0;
}
